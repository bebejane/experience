{"version":3,"sources":["components/Button.js","components/SourceCard.js","components/Loading.js","components/FeedArticleTools.js","components/FeedArticle.js","components/FeedCard.js","components/SearchCard.js","components/Search.js","components/Error.js","history.js","components/App.js","index.js"],"names":["Button","props","state","icon","toggle","togle","disabled","e","this","onClick","size","className","style","undefined","nextProps","prevState","Component","SourceCard","id","unread","count","name","url","selected","notools","refreshing","edit","setState","console","log","target","value","newName","onUpdate","preventDefault","onRemove","onRefresh","loading","key","onSubmit","type","onChange","readOnly","deleteFeed","Loading","message","term","FeedArticleTools","article","read","onToggleRead","_id","onOpen","FeedArticle","feed","view","link","snippet","contentSnippet","content","sentances","split","length","slice","join","substring","fullView","time","title","FeedCard","articles","forEach","a","moment","pubDate","fromNow","map","idx","SearchCard","site","host","parse","hostname","Search","matches","formRef","React","createRef","urlRef","fetch","encodeURIComponent","then","res","json","google","catch","err","error","ref","placeholder","autoComplete","m","Error","show","onClose","createBrowserHistory","App","feedId","loadingFeeds","feeds","search","page","pages","init","path","data","opt","method","toUpperCase","axios","newErr","response","status","request","api","toggleRead","history","replace","setTimeout","window","location","allRead","filter","newArticles","silent","newState","push","pos","listen","action","attempts","test","f","loadingFeed","addFeed","loadFeed","refreshFeed","updateFeed","browse","class","onToggleView","toggleAllRead","openLink","onErrorClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c4ec00e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './Button.css'\n\nclass Button extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            icon:props.icon,\n            toggle:props.togle,\n            disabled:props.disabled\n        };\n    }\n    onClick(e){\n        this.props.onClick(e)\n    }\n    componentDidMount() {\n\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return nextProps\n    }\n\n    render() {\n        const {icon, toggle, disabled, size} = this.state\n\n        return (\n            <div className={'button'} style={size ? {\"fontSize\": size} : undefined} disabled={disabled} onClick={(e)=>this.onClick(e)}>\n                {icon}\n            </div>\n        );\n    }\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport \"./SourceCard.css\";\n\nclass SourceCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id:props.id,\n            unread:props.unread,\n            count:props.count,\n            name:props.name,\n            url:props.url,\n            selected:props.selected,\n            notools:props.notools,\n            refreshing:props.refreshing,\n            edit:false\n        };\n    }\n    onClick(id){\n        if(this.state.selected)\n            this.setState({edit:this.state.name})\n        else\n            this.setState({selected:true, edit:false}, ()=>this.props.onClick(id))\n    }\n    onChange(e){\n        console.log(e.target.value)\n        this.setState({edit:e.target.value})\n    }\n    onSubmit(e){\n        const newName = this.state.edit;\n        this.setState({selected:true, edit:false, name:newName}, ()=>{\n            this.props.onUpdate(this.state.id, newName)\n        })\n        e.preventDefault()\n    }\n    deleteFeed(id) {\n        this.props.onRemove()\n    }\n    refreshFeed(id){\n        this.props.onRefresh(id)\n        this.setState({refreshing:true})\n    }\n    componentDidMount() {\n\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return nextProps\n    }\n\n    render() {\n        const {name, id, selected, notools, unread, edit} = this.state\n        const loading = this.state.loading\n\n        if(loading)\n            return <div className={'loading'}><div>{loading}</div></div>\n        return (\n            <div key={id} className={'source-card' + (selected ? ' source-card-selected' : '')}>\n                <div className={'source-card-unread'}>{unread}</div>\n                <form onSubmit={(e)=>this.onSubmit(e)}>\n                    <input type=\"text\" className={'source-card-title'} value={edit || name} onChange={(e)=>this.onChange(e)} readOnly={!edit} onClick={()=>this.onClick(id)}/>\n                </form>\n                {!notools &&\n                    <div className={'source-card-tools'}>\n                        <div className={'source-card-tool'} onClick={()=>this.deleteFeed(id)}>-</div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default SourceCard;\n","import React, { Component } from \"react\";\nimport './Loading.css'\nimport {AiOutlineReload} from 'react-icons/ai'\n\nclass Loading extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message:props.term,\n            loading:props.loading,\n        };\n    }\n\n    componentDidMount() {\n\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return nextProps\n    }\n\n    render() {\n        const {message, loading} = this.state\n        if(!loading)\n            return null\n\n        return (\n            <div className={'loading'}>\n                {message && <div className={'loading-message'}>{message}</div>}\n                <div className={'loading-icon'}><AiOutlineReload className={'icon-spin'}/></div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport {AiOutlineArrowRight, AiOutlineCheck} from 'react-icons/ai'\nimport Button from './Button'\nimport \"./FeedArticleTools.css\";\n\nclass FeedArticleTools extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id:props.id,\n            article:props.article\n        };\n    }\n    onClick(id, url){\n        this.setState({selected:this.state.id})\n        this.props.onClick(url)\n        //window.location = url\n    }\n    onToggleRead(){\n        const read = !this.state.article.read\n        this.props.onToggleRead(this.state.article._id, read)\n        this.setState({article:{...this.state.article, read:read}})\n    }\n    deleteFeed(id) {\n        this.props.onRemove()\n    }\n    refresh(){\n\n    }\n    onRead(){\n\n    }\n    onOpen(){\n        this.props.onOpen()\n    }\n    componentDidMount() {\n\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return nextProps\n    }\n\n    render() {\n\n        return (\n            <div className={'feed-card-tools'}>\n                <Button onClick={(e)=>this.onToggleRead(e)} icon={<AiOutlineCheck/>}/>\n                <Button onClick={(e)=>this.onOpen(e)} icon={<AiOutlineArrowRight/>}/>\n            </div>\n        );\n    }\n}\n\nexport default FeedArticleTools;\n","import React, { Component } from \"react\";\nimport FeedArticleTools from './FeedArticleTools'\nimport \"./FeedArticle.css\";\n\nclass FeedArticle extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: props.id,\n            feed: props.feed,\n            article: props.article,\n            view:props.view,\n            refreshing: props.refreshing\n        };\n    }\n    onClick(url) {\n        console.log(this.state.article)\n        this.setState({ selected: this.state.article._id, url: url })\n        this.props.onClick(this.state.article._id, this.state.article.link)\n    }\n    onToggleRead() {\n        const read = !this.state.article.read\n        this.props.onToggleRead(this.state.article._id, read)\n        this.setState({ article: { ...this.state.article, read: read } })\n    }\n    deleteFeed(id) {\n        this.props.onRemove()\n    }\n    refresh() {\n\n    }\n    componentDidMount() {\n\n    }\n    contentSnippet(article) {\n\n        let snippet = article.contentSnippet || article.content || '';\n        if(!snippet)\n            return ''\n\n        let sentances = snippet.split('.')\n\n        if (sentances.length > 1)\n            snippet = sentances.slice(0, 2).join('.')\n        else\n            snippet = snippet.substring(0, 100) + '...'\n\n        return snippet\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return nextProps\n    }\n\n    render() {\n        const { article, selected, view ,feed} = this.state\n        const fullView = view === 'full'\n\n        return (\n            <div className={'feed-card' + (selected === article._id ? ' feed-card-selected' : '')}>\n                <div className={'feed-card-left' + (article.read ? ' feed-card-read' : '')}  onClick={()=>this.onClick(article._id, article.link)}>\n                    <div className={'feed-card-title'}>\n                        <div className={'feed-card-date'}>{article.time} - {feed}</div>\n                        {article.title}\n                        {fullView &&\n                            <div className={'feed-card-content'}>\n                                {this.contentSnippet(article)}\n                            </div>\n                        }\n                    </div>\n                </div>\n                <div className={'feed-card-right'}>\n                {fullView &&\n                    <FeedArticleTools\n                        article={article}\n                        onToggleRead={(read)=>this.onToggleRead()} \n                        onOpen={()=>this.onClick(article.link)}\n                    />\n                }\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default FeedArticle;\n","import React, { Component } from \"react\";\nimport Loading from './Loading'\nimport FeedArticle from './FeedArticle'\nimport moment from 'moment'\nimport \"./FeedCard.css\";\n\nclass FeedCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id:props.id,\n            name:props.name,\n            view:props.view,\n            url:props.url,\n            selected:props.selected,\n            articles:props.articles || [],\n            refreshing:props.refreshing,\n        };\n    }\n    onClick(id, url){\n        this.setState({selected:id, url:url})\n        this.props.onClick(id, url)\n    }\n    onToggleRead(id, read){\n        this.props.onToggleRead(id, read)\n    }\n    deleteFeed(id) {\n        this.props.onRemove()\n    }\n    refresh(){\n\n    }\n    componentDidMount() {\n\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return nextProps\n    }\n\n    render() {\n        const {refreshing, articles, view, name} = this.state\n\n        articles.forEach((a)=>{\n            a.time = moment(a.pubDate).fromNow()\n        })\n\n        if(articles.length === 0)\n            return <div className={'empty'}><div>Nothing heree</div></div>\n\n        return (\n            <div className={'feed'}>\n                {refreshing && <Loading message={'Loading feed...'} loading={true}/>}\n                {!refreshing && articles.map((a, idx)=>\n                    <FeedArticle\n                        key={idx} \n                        article={a}\n                        view={view}\n                        feed={a.feed ? a.feed.name : name}\n                        onClick={(id, link)=>this.onClick(a._id, link)} \n                        onToggleRead={(id, read)=>this.onToggleRead(id, read)}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default FeedCard;\n","import React, { Component } from \"react\";\nimport url from \"url\"\nimport \"./SearchCard.css\";\n\nclass SearchCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            site:props.site,\n            title:props.title,\n            link:props.link,\n        };\n    }\n    onClick(link){\n        this.props.onClick(link)\n    }\n    addFeed(){\n\n    }\n    componentDidMount() {\n\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return nextProps\n    }\n\n    render() {\n        const {title, link} = this.state\n        const host = url.parse(this.state.link).hostname\n        return (\n            <div className={'search-card'} onClick={()=>this.onClick(link)}>\n                <div className={'search-card-title'}>\n                    {title}\n                    <div className={'search-card-link'}>{host}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchCard;\n","import React, { Component } from \"react\";\nimport SearchCard from \"./SearchCard\";\nimport {AiOutlineLoading} from 'react-icons/ai'\nimport './Search.css'\n\nclass Search extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            term:props.term,\n            loading:false,\n            url:'',\n            matches: []\n        };\n        this.formRef = React.createRef();\n        this.urlRef = React.createRef();\n    }\n    onClick(url){\n        this.setState({loading:false, matches:[], url:''})\n        this.props.onClick(url)\n    }\n    onSubmit(e){\n        e.preventDefault()\n        this.setState({loading:'Loading search'})\n        fetch('http://localhost:3001/api/search/'+encodeURIComponent(this.state.url))\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ matches: res.google })\n            })\n            .catch(err => console.error(err))\n            .then(()=>this.setState({loading:false}))\n    }\n    onChange(e){\n        this.setState({[e.target.id]: e.target.value });\n    }\n    refresh(){\n\n    }\n    componentDidMount() {\n\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return nextProps\n    }\n\n    render() {\n        const {matches, loading} = this.state\n\n        return (\n            <div className={'search-container'}>\n                <form ref={this.formRef} onSubmit={(e)=>this.onSubmit(e)}>\n                    <input\n                        className={'form-add'}\n                        placeholder=\"Add blog...\"\n                        ref={this.urlRef}\n                        onChange={(e)=>this.onChange(e)}\n                        value={this.state.url}\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        id=\"url\"\n                    />\n                </form>\n                <div className={'search-result'}>\n                    {loading && <div className={'search-loading'}><AiOutlineLoading className='icon-spin'/></div>}\n                    {!loading && matches.map((m, idx)=>\n                        <SearchCard\n                            key={idx}\n                            site={m}\n                            title={m.title}\n                            link={m.link}\n                            onClick={()=>this.onClick(m.link)}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport './Error.css'\n//import {AiOutlineReload} from 'react-icons/ai'\n\nclass Error extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error:props.error,\n            show:true\n        };\n    }\n    onClose(){\n        this.props.onClose()\n    }\n    componentDidMount() {\n\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return nextProps\n    }\n\n    render() {\n        const {error, show} = this.state\n        if(!error) return null\n\n        return (\n            <div className={'error-wrap'}>\n                <div className={'error-modal'}>\n                    <div className={'error-header'}>Error</div>\n                    <div className={'error-content'}>\n                        <div className={'error-message'}>{error.message} ({error.type})</div>\n                        <div className={'error-bottom'}>\n                            <button onClick={()=>this.onClose()}>close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Error;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React, { Component } from \"react\";\nimport Button from './Button'\nimport SourceCard from './SourceCard'\nimport FeedCard from './FeedCard'\nimport Search from './Search'\nimport Error from './Error'\nimport Loading from './Loading'\nimport axios from \"axios\"\nimport history from '../history'\n\nimport { IoIosRefresh } from 'react-icons/io'\nimport { BsCheckAll } from 'react-icons/bs'\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: '',\n            feedId: null,\n            loading: false,\n            loadingFeeds: true,\n            refreshing: false,\n            articles: [],\n            feeds: [],\n            search: [],\n            page: 1,\n            pages: 1,\n            init: false,\n            view:'full',\n            error:null\n        };\n    }\n\n    api(path, data = {}, opt = { method: 'get' }) {\n        console.log(opt.method.toUpperCase(), path, data)\n        return axios({\n            method: opt.method || 'get',\n            url: \"http://localhost:3001/api\" + path,\n            data: data\n        }).then((res) => {\n            if(!res) return\n            console.log(res.data)\n            return res\n        }).catch((error)=>{\n\n            let newErr = error;\n\n            if (error.response) {\n              // The request was made and the server responded with a status code\n              // that falls out of the range of 2xx\n              console.log('response error')\n              newErr = {...error.response.data, status:error.response.status, type:1}\n            } else if (error.request) {\n              // The request was made but no response was received\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n              // http.ClientRequest in node.js\n              console.log('request error')\n              newErr = {message:'Request error: ' + error.message, status:error.request.status, type:2}\n            } else {\n              // Something happened in setting up the request that triggered an Error\n              newErr.type = 3\n              console.log('network error')\n            }\n            console.log(newErr, error)\n            this.setState({error:newErr})\n            throw new Error(newErr)\n          });\n    }\n    addFeed(url) {\n        if (!url) return\n        const data = { url: url }\n        console.log('add feed', url)\n        this.setState({ loadingFeeds: 'Adding feed...', search: [] })\n        return this.api('/feed', data, { method: 'post' })\n            .then((res) => {\n                console.log(res)\n                return this.feeds().then(() => {\n                    return this.feed(res.data._id)\n                })\n            })\n            .catch((err) => this.setState({loadingFeeds:false}))\n    }\n    updateFeed(id, name) {\n\n        return this.api('/feed', { _id: id, name: name }, { method: 'patch' })\n            .then((res) => {\n                const articles = this.state.articles.map((a) => res.data._id === a._id ? res.data : a)\n                this.setState({ articles: articles })\n                return res\n            })\n            .then(() => this.feeds(true))\n            .catch((err) => {})\n    }\n    deleteFeed(id) {\n\n        return this.api('/feed', { _id: id }, { method: 'delete' })\n            .then((res) => {\n                if (id === this.state.feedId)\n                    this.setState({ articles: [], feedId: null })\n                return res\n            })\n            .then(() => this.feeds(true))\n            .catch((err) => {})\n\n    }\n    refreshFeed(id) {\n\n        this.setState({ refreshing: id })\n\n        return this.api('/feed/' + id + '/refresh', {}, { method: 'get' })\n            .then((res) => {\n                if (id === this.state.feedId)\n                    this.setState({ articles: res.data })\n                return res\n            })\n            .then(() => this.feeds(true))\n            .catch((err) => {})\n            .then(() => this.setState({ refreshing: false }))\n    }\n    loadFeed(id) {\n        this.setState({ refreshing: true })\n        this.feed(id).then((articles) => {\n\n        })\n        .catch((err) => {})\n        .then(() => this.setState({ refreshing: false }))\n    }\n    openLink(id, link) {\n        console.log('open link', link, id)\n\n        const feedId = this.state.feedId\n        const page = this.state.page\n        this.toggleRead(feedId, id, true).then((article) => {\n            history.replace('/feed/' + feedId + '/page/'+page, this.state)\n            setTimeout(() => window.location = link, 1000)\n        }).catch((err) => this.setState({error:err}))\n    }\n    onToggleRead(feedId, id, read) {\n        this.toggleRead(feedId, id, read)\n            .then(() => this.feeds(true))\n            .catch((err) => {})\n    }\n    toggleRead(feedId, id, read) {\n\n        return this.api('/feed/' + feedId, { _id: id, read: read }, { method: 'patch' })\n            .then((res) => {\n                const articles = this.state.articles.map((a) => res.data._id === a._id ? res.data : a)\n                this.setState({ articles: articles })\n                return res\n            })\n            .catch((err) => {\n                throw err\n            })\n    }\n    toggleAllRead(feedId,) {\n\n        const articles = this.state.articles;\n        const allRead = articles.filter((a)=>a.read).length\n        const newArticles = articles.map((a) => {\n            return { read: allRead ? false : true, _id: a._id }\n        })\n\n        return this.api('/feed/' + feedId, newArticles, { method: 'patch' })\n            .then((res) => this.setState({ articles: res.data }))\n            .catch((err) => {\n                throw err\n            })\n\n    }\n    feeds(silent) {\n\n        this.setState({ loadingFeeds: !silent ? true:false })\n        return this.api('/feed', {}, { method: 'get' })\n            .then(res => this.setState({ feeds: res.data }))\n            .catch((err) => {\n                throw err\n            })\n            .then(() => this.setState({ loadingFeeds: false }))\n    }\n    feed(id, opt = { page: 1 }) {\n\n        this.setState({ refreshing: id })\n        return this.api('/feed/' + id + '/page/' + opt.page, {}, { method: 'get' })\n            .then(res => {\n                const articles = res.data.data;\n                const page = res.data.page\n                const pages = res.data.pages\n\n                const newState = { ...this.state, feedId: id, articles: articles, refreshing: false, page: page, pages:pages}\n                history.push('/feed/' + id + '/page/' + opt.page, newState)\n                this.setState(newState)\n                return res.data\n            })\n            .catch((err) => {\n                console.error(err)\n                throw err\n            })\n            .then((res) => {\n                this.setState({ refreshing: false });\n                console.log('then')\n                return res;\n            })\n    }\n    browse(pos) {\n        let page = this.state.page + pos\n        let pages = this.state.pages;\n        if(page>pages || page <=0) return\n\n        this.feed(this.state.feedId, { page: page }).then((data) => {\n\n            const articles = data.data;\n            if (!articles.length) {\n                this.setState({ page: data.page - 1 })\n            } else\n                this.setState({ articles: articles, page: data.page })\n        }).catch((err) => {})\n    }\n    error(err) {\n\n    }\n    componentDidMount() {\n\n        history.listen((location, action) => {\n            this.setState(location.state)\n        });\n        const state = history.location.state;\n        if (state)\n            this.setState({ url: state.url, feedId: state.feedId, articles: state.articles, feeds: state.feeds })\n        this.init()\n    };\n    init(attempts) {\n\n        this.setState({ init: false })\n        this.feeds().then(() => {\n            this.setState({ init: true })\n        }).catch((err) => {\n            this.setState({ init: false })\n            setTimeout(() => this.init(), 2000, attempts ? attempts++ : 1)\n        })\n\n        this.test('/feed/today')\n    }\n    test(path) {\n        return\n        return this.api(path, {}, { method: 'get' })\n            .then((res)=>{\n                console.log(res)\n            })\n            .catch((err) => {\n                //this.setState({error:err})\n                console.log(err)\n            })\n    }\n    onErrorClose(err){\n        this.setState({error:null})\n    }\n    onToggleView(type){\n        this.setState({view:type == 'full' ? 'mini' : 'full'})\n    }\n    render() {\n\n        const { articles, feeds, feedId, search, refreshing, loadingFeeds, init, error, pages, page, view } = this.state\n        const feed = feeds.filter((f) => f._id === feedId)[0] || {}\n        const loadingFeed = feedId !== undefined && feedId === refreshing\n\n        if (!init)\n            return <Loading message={'Starting up...'} loading={true}/>\n        return (\n            <div className=\"App\">\n                <div id=\"left\">\n                    <Search onClick={(url)=>this.addFeed(url)}/>\n                    {!loadingFeeds && !search.length && feeds.map((f, idx)=>\n                        <SourceCard\n                            key={f._id}\n                            name={f.name}\n                            url={f.url}\n                            id={f._id}\n                            unread={f.unread}\n                            count={f.count}\n                            refreshing={refreshing === f._id}\n                            onClick={()=>this.loadFeed(f._id)}\n                            onRemove={()=>this.deleteFeed(f._id)}\n                            onRefresh={()=>this.refreshFeed(f._id)}\n                            onUpdate={(id, name)=>this.updateFeed(id, name)}\n                            selected={f._id === feedId}\n                        />\n                    )}\n                    <Loading message={loadingFeeds} loading={loadingFeeds}/>\n                    {!feeds.length && <div className={'refresh'}><Button onClick={()=>this.feeds()} icon={'R'}/></div>} \n                </div>\n                <div id=\"right\">\n                    <div id={'feed-header'}>\n                        <div id={'feed-title'}>{feed.name}</div>\n\n                        <div id={'feed-tools'}>\n                            <Button onClick={()=>this.browse(-1)} icon={'-'}/>\n                            <Button onClick={()=>{}} icon={page + '/' + pages} size={11}/>\n                            <Button onClick={()=>this.browse(1)} icon={'+'}/>\n                            <div class={'button-spacer'}></div>\n                            <Button onClick={()=>this.onToggleView(view)} icon={'V'}/>\n                            <Button onClick={()=>this.toggleAllRead(feed._id)} icon={<BsCheckAll/>}/>\n                            <Button onClick={()=>this.refreshFeed(feed._id)} icon={<IoIosRefresh/>}/>\n                        </div>\n\n                    </div>\n                    <div id=\"feed\">\n                         <FeedCard\n                            name={feed.name}\n                            id={feed._id}\n                            articles={articles}\n                            refreshing={loadingFeed}\n                            view={view}\n                            onClick={(id, link)=>this.openLink(id, link)}\n                            onToggleRead={(id, read)=>this.onToggleRead(feedId, id, read)}\n                        />\n                    </div>\n\n                </div>\n                {error && <Error error={error} onClose={()=>this.onErrorClose(error)}/>}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport { Router } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport history from './history'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n        <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}